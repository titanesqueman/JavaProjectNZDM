/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import static project.Tokeniser.Token.EMPLOYEE;
import static project.Tokeniser.Token.SELLER;

/**
 *
 * @author Drazic
 */
public class PropertyPanel extends javax.swing.JPanel {
    Property property;
    private int month=0;
    private int day=0;
    private int year=0;
    private int hour=0;
   
    /**
     * Creates new form propertyPanel
     */
    public PropertyPanel() {
        initComponents();
    }
    
    public PropertyPanel(Property property) {
        this.property = property;
        initComponents();
        loaddata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        areaLabel = new javax.swing.JLabel();
        backButton1 = new project.BackButton2();
        favCheckBox = new javax.swing.JCheckBox();
        dayCombo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        monthCombo = new javax.swing.JComboBox<>();
        yearCombo = new javax.swing.JComboBox<>();
        hourCombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        confirmButton = new javax.swing.JButton();

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        titleLabel.setText("titleLabel");

        addressLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addressLabel.setText("address");

        priceLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        priceLabel.setText("price");

        areaLabel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        areaLabel.setText("area");

        favCheckBox.setText("fav");
        favCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                favCheckBoxActionPerformed(evt);
            }
        });

        dayCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dayCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayComboActionPerformed(evt);
            }
        });

        jLabel1.setText("Book a viewing:");

        monthCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        monthCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthComboActionPerformed(evt);
            }
        });

        yearCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "2021", "2022" }));
        yearCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearComboActionPerformed(evt);
            }
        });

        hourCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour of visit", "--------------" }));
        hourCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourComboActionPerformed(evt);
            }
        });

        jLabel2.setText("NB : our viewings last around 45 minutes");

        confirmButton.setText("Confirm");
        confirmButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(priceLabel)
                        .addComponent(areaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(favCheckBox, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(confirmButton)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hourCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(priceLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(favCheckBox)))
                .addGap(18, 18, 18)
                .addComponent(areaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressLabel)
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(monthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hourCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(confirmButton)
                .addContainerGap(103, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void favCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_favCheckBoxActionPerformed
        // TODO add your handling code here:
        if (favCheckBox.isSelected()){
            BDD.setFav(property.propertyId, MainWindow.getUser().userId);
        }else{
            BDD.deleteFav(property.propertyId, MainWindow.getUser().userId);
        }
    }//GEN-LAST:event_favCheckBoxActionPerformed

    private void dayComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayComboActionPerformed
        day = (int)dayCombo.getSelectedIndex();
        
        updateHours();
    }//GEN-LAST:event_dayComboActionPerformed

    private void yearComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearComboActionPerformed
        year = Integer.parseInt((String) yearCombo.getSelectedItem());
        
        
        updateHours();
    }//GEN-LAST:event_yearComboActionPerformed

    private void monthComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthComboActionPerformed
        month = (int)monthCombo.getSelectedIndex();
        
        if (month==2||month==4 || month ==6 || month==9|| month ==11){
            dayCombo.removeItem("31");
            if (dayCombo.getItemCount()<31 ){ //if there's not 31 days avalaible
                int initialNrOfDays =dayCombo.getItemCount();
                int daystoadd = 30-dayCombo.getItemCount();
                for (int i=1; i<=daystoadd; i++){
                    dayCombo.addItem(Integer.toString(initialNrOfDays+i));
                }
            }
            if (month==2){
                dayCombo.removeItem("30");
                dayCombo.removeItem("29");
            }
        }
        else { //if it's a month with > than 30 days 
            if (dayCombo.getItemCount()<32 ){ //if there's not 31 days avalaible
                int initialNrOfDays =dayCombo.getItemCount();
                int daystoadd = 31-dayCombo.getItemCount();
                for (int i=1; i<=daystoadd; i++){
                    dayCombo.addItem(Integer.toString(initialNrOfDays+i));
                }
            }
        }
        updateHours();
    }//GEN-LAST:event_monthComboActionPerformed

    private void hourComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourComboActionPerformed
        String fullHour= (String)hourCombo.getSelectedItem();
        if (fullHour.charAt(1)=='h'){ //8h / 9h 
            hour= Integer.parseInt(String.valueOf(fullHour.charAt(0)));
        }
        else if (fullHour.charAt(2)=='h'){
            String twoDigitsHour= String.valueOf(fullHour.charAt(0)) + String.valueOf(fullHour.charAt(1));
            hour = Integer.parseInt(twoDigitsHour);
        }
        System.out.println(hour);
    }//GEN-LAST:event_hourComboActionPerformed

    private void confirmButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmButtonActionPerformed
        BDD.addViewing(property.propertyId,year,month,day,hour);
        MainWindow.changePanel(new BrowsePropertiesPanel());
    }//GEN-LAST:event_confirmButtonActionPerformed
    private void updateHours(){
        for (int i=hourCombo.getItemCount(); i>1; i--){
                hourCombo.removeItemAt(i-1);
        }
        if ((month != 0 && year != 0 && day != 0)){
            
            for (int i=8; i<18;i++){
                if (!BDD.isBooked(property.propertyId,year,month,day,i)){
                    hourCombo.addItem(i+"h -- "+(i+1)+"h");
                }
            }
        }
    }
    private void loaddata() {
        
        if (MainWindow.getUser().token == SELLER || MainWindow.getUser().token == EMPLOYEE){
            favCheckBox.setVisible(false);
        }else{
            if (BDD.isFav(property.getPropertyId(), MainWindow.getUser().getUserId())){
            favCheckBox.setSelected(true);
            }else{
                favCheckBox.setSelected(false);
            }
        }
        
        titleLabel.setText(property.getTitle());
        addressLabel.setText(property.getAddress());
        areaLabel.setText("Area : "+property.getArea()+"m²");
        priceLabel.setText("Price : "+property.getPrice()+"€");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JLabel areaLabel;
    private project.BackButton2 backButton1;
    private javax.swing.JButton confirmButton;
    private javax.swing.JComboBox<String> dayCombo;
    private javax.swing.JCheckBox favCheckBox;
    private javax.swing.JComboBox<String> hourCombo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JComboBox<String> monthCombo;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JComboBox<String> yearCombo;
    // End of variables declaration//GEN-END:variables
}
