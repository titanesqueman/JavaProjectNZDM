/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import static project.Tokeniser.Token.BUYER;

/**
 *
 * @author Drazic
 */
public class BrowseMyOffer extends javax.swing.JPanel {

    /**
     * Creates new form BrowseMyOffer
     */
    public BrowseMyOffer() {
        initComponents();
        
        if (MainWindow.getUser().getToken() == BUYER){
            loaddataBuyer();
        }else{
            loaddataSeller();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        container = new javax.swing.JPanel();
        backButton21 = new project.BackButton2();

        setBackground(new java.awt.Color(197, 217, 217));

        container.setBackground(new java.awt.Color(197, 217, 217));
        container.setLayout(new javax.swing.BoxLayout(container, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(container);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 416, Short.MAX_VALUE)
                        .addComponent(backButton21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backButton21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private project.BackButton2 backButton21;
    private javax.swing.JPanel container;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void loaddataBuyer() {
        try {
            ResultSet rs = BDD.getBuyerOffer(MainWindow.getUser().getUserId());
            
            while (rs.next()){
                Property property = Property.getPropertyFromRS(rs);
                
                Offer myOffer = Offer.getOfferFromRS(rs);
                System.out.println(property.getTitle());
                container.add(new SendOfferPanel(property, myOffer, true));
            }
        } catch (SQLException ex) {
            Logger.getLogger(BrowseMyOffer.class.getName()).log(Level.SEVERE, null, ex);
        }
        container.revalidate();
        container.repaint();
    }
    
    private void loaddataSeller() {
        try {
            ResultSet rs = BDD.getSellerOffer(MainWindow.getUser().getUserId());
            
            while (rs.next()){
                Property property = Property.getPropertyFromRS(rs);
                
                Offer myOffer = Offer.getOfferFromRS(rs);
                System.out.println(property.getTitle());
                container.add(new SendOfferPanel(property, myOffer, true));
            }
        } catch (SQLException ex) {
            Logger.getLogger(BrowseMyOffer.class.getName()).log(Level.SEVERE, null, ex);
        }
        container.revalidate();
        container.repaint();
    }
}
